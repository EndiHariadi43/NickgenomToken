name: Verify on BscScan

on:
  workflow_dispatch:
    inputs:
      network:
        type: choice
        options: [bsc, bscTestnet]
        default: bsc
      contract:
        type: string
        default: "contracts/token/NickgenomPermit.sol:NickgenomPermit"

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }

      - name: Install deps
        run: |
          npm ci || npm ci --legacy-peer-deps

      - name: Compile
        env:
          BSC_RPC_URL: ${{ secrets.BSC_RPC_URL }}
          BSC_TESTNET_RPC_URL: ${{ secrets.BSC_TESTNET_RPC_URL }}
        run: |
          npx hardhat clean
          npx hardhat compile

      - name: Verify on BscScan
        env:
          BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
        run: |
          NET="${{ inputs.network }}"
          CONTRACT_QN="${{ inputs.contract }}"
          if [ "$NET" = "bsc" ]; then
            ADDR="${{ secrets.CONTRACT_ADDRESS_BSC }}"
          else
            ADDR="${{ secrets.CONTRACT_ADDRESS_BSCTESTNET }}"
          fi
          if [ -z "$ADDR" ]; then
            echo "❌ Secret alamat kontrak kosong untuk $NET"; exit 1
          fi
          CMD="npx hardhat verify --network $NET --contract \"$CONTRACT_QN\" $ADDR"
          echo "➡️ $CMD"
          eval $CMD
